default:
  tags:
    - docker

stages:
  - static
  - build
  - test
  - release

.static:
  stage: static
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-ubuntu2204-build-node:latest

clang-format:
  extends: .static
  script:
    - ci/check-formatting.sh

black:
  extends: .static
  script:
    - python3 -m black --version
    - python3 -m black --check integration-tests

cppcheck:
  extends: .static
  script:
    - cppcheck --version
    - >
      cppcheck \
        --xml \
        --inline-suppr \
        --suppress=unusedFunction \
        --suppress=missingInclude \
        --enable=all \
        --inconclusive \
        src/ 2> cppcheck.xml
  only:
    - merge_requests

.build:
  stage: build
  before_script:
    - mkdir $CI_JOB_NAME
    - cd $CI_JOB_NAME
    - >
      conan remote add \
        --insert 0 \
        ecdc-conan-virtual \
        $ESS_ARTIFACTORY_ECDC_CONAN_VIRTUAL_REMOTE_URL
    - $SCL conan install --build missing ..
    - $SCL conan info ../conanfile.txt > CONAN_INFO
  after_script:
    - >
      conan remote add \
        ecdc-conan-external \
        $ESS_ARTIFACTORY_ECDC_CONAN_EXTERNAL_REMOTE_URL
    - >
      conan user \
        --password $ESS_ARTIFACTORY_ECDC_CONAN_TOKEN \
        --remote ecdc-conan-external \
        $ESS_ARTIFACTORY_ECDC_CONAN_USER
    # Store built packages to save build time on subsequent builds
    - conan upload '*' --all --confirm --remote ecdc-conan-external

centos-debug-build:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  variables:
    SCL: scl enable devtoolset-11 rh-python38 --
  script:
    - $SCL cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL -DRUN_DOXYGEN=ON -DCOV=ON ..
    - $SCL ninja all UnitTests docs
  artifacts:
    paths:
      - $CI_JOB_NAME/

centos-debug-test:
  stage: test
  needs: ["centos-debug-build"]
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  script:
    - cd centos-debug-build
    - ninja coverage
    - cat coverage.txt
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  dependencies:
    - centos-debug-build
  artifacts:
    paths:
      - centos-debug-build/coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: centos-debug-build/coverage.xml

centos-release-build:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  variables:
    SCL: scl enable devtoolset-11 rh-python38 --
  script:
    - $SCL ../ci/configure-release.sh .. .
    - $SCL ninja all UnitTests docs
  artifacts:
    paths:
      - $CI_JOB_NAME/CONAN_INFO
      - $CI_JOB_NAME/bin
      - $CI_JOB_NAME/lib
      - $CI_JOB_NAME/licenses

centos-release-test:
  stage: test
  needs: ["centos-release-build"]
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  script:
    - cd centos-release-build
    - ./build/bin/UnitTests --gtest_output=xml:test-output.xml
  dependencies:
    - centos-release-build
  artifacts:
    paths:
      - centos-release-build/test-output.xml
    reports:
      junit: centos-release-build/test-output.xml

.alt-distro-build:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-$DISTRO-build-node:latest
  script:
    - >
      $SCL cmake \
        -GNinja \
        -DCMAKE_BUILD_TYPE=Debug \
        -DCMAKE_SKIP_RPATH=FALSE \
        -DCMAKE_INSTALL_RPATH='\$ORIGIN/../lib' \
        -DCMAKE_BUILD_WITH_INSTALL_RPATH=TRUE \
        -DCONAN=MANUAL \
        -DRUN_DOXYGEN=ON \
        ..
    - $SCL ninja all UnitTests docs
  artifacts:
    paths:
      - $CI_JOB_NAME/

almalinux-build:
  extends: .alt-distro-build
  variables:
    DISTRO: almalinux8
    SCL:  scl enable gcc-toolset-12 --

debian-build:
  extends: .alt-distro-build
  variables:
    DISTRO: debian11

ubuntu-build:
  extends: .alt-distro-build
  variables:
    DISTRO: ubuntu2204

.alt-distro-test:
  stage: test
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-$DISTRO-build-node:latest

almalinux-test:
  extends: .alt-distro-test
  needs: ["almalinux-build"]
  variables:
    DISTRO: almalinux8
  script:
    - cd almalinux-build
    - ./bin/UnitTests
  dependencies:
    - almalinux-build

debian-test:
  extends: .alt-distro-test
  needs: ["debian-build"]
  variables:
    DISTRO: debian11
  script:
    - cd debian-build
    - ./bin/UnitTests
  dependencies:
    - debian-build

ubuntu-test:
  extends: .alt-distro-test
  needs: ["ubuntu-build"]
  variables:
    DISTRO: ubuntu2204
  script:
    - cd ubuntu-build
    - ./bin/UnitTests
  dependencies:
    - ubuntu-build

archive:
  stage: release
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  script:
    - cd centos-release-build
    - mkdir -p archive/kafka-to-nexus/bin
    - cp ./bin/kafka-to-nexus archive/kafka-to-nexus/bin/
    - cp -r ./lib archive/kafka-to-nexus/
    - cp -r ./licenses archive/kafka-to-nexus/
    - cp ./CONAN_INFO archive/kafka-to-nexus/
    - cd archive
    - tar czf kafka-to-nexus.tar.gz kafka-to-nexus
  dependencies:
    - centos-release-build
  artifacts:
    paths:
      - centos-release-build/archive/kafka-to-nexus.tar.gz
