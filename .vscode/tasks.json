{
    "tasks": [
        {
            "type": "shell",
            "label": "BuildOld",
            "command": "mkdir -p _build && cd _build && conan install .. --build=missing && cmake .. && make -j$(nproc)",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "Build",
            "command": "mkdir -p _build && cd _build && conan install .. --build=missing -o *:shared=False && cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL .. && ninja all",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "type": "shell",
            "label": "BuildDocs",
            // "command": "mkdir -p _build && cd _build && conan install .. --build=missing && cmake -DRUN_DOXYGEN=ON .. && make -j$(nproc) docs",
            "command": "mkdir -p _build && cd _build && conan install .. --build=missing && cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL .. && ninja all docs",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "Archive",
            "command": "mkdir -p _archive/kafka-to-nexus && cp -a _build/bin _build/lib _build/licenses _archive/kafka-to-nexus && cd _archive && tar cf - kafka-to-nexus | pigz > kafka-to-nexus.tgz",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": [
                "Build"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "BuildUnitTests",
            // "command": "make -j$(nproc) UnitTests",
            "command": "ninja all UnitTests",
            "options": {
                "cwd": "${workspaceFolder}/_build"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": [
                "Build"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "UnitTests",
            "command": "cd _build && source activate_run.sh && ./bin/UnitTests",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": [
                "BuildUnitTests"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "type": "shell",
            "label": "cppcheck",
            "command": "cppcheck --xml --inline-suppr --suppress=unusedFunction --suppress=missingInclude --enable=all --inconclusive src/ >/dev/null",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "test",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "IntegrationTests",
            "command": "docker compose down || true ; (source .venv/bin/activate && source ../_build/activate_run.sh && docker compose up -d && sleep 10 && ./setup.sh ../_archive/kafka-to-nexus.tgz && ./run-integration-tests.sh) ; ./teardown.sh",
            "options": {
                "cwd": "${workspaceFolder}/integration-tests"
            },
            "dependsOn": [
                "Archive"
            ],
            "group": {
                "kind": "test",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "Selected UnitTests from Filter",
            "command": "cd _build && source activate_run.sh && ./bin/UnitTests --gtest_filter=${input:filterString}",
            "options": {
              "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
              "$gcc"
            ],
            "dependsOn": [
              "BuildUnitTests"
            ],
            "group": {
              "kind": "test",
              "isDefault": false
            }
          }
    ],
    "inputs": [
        {
            "id": "filterString",
            "type": "promptString",
            "description": "Enter the gtest_filter string."
        }
    ],
    "version": "2.0.0"
}