{
	"$schema": "http://json-schema.org/schema#",
	"id": "ess.schema.filewriter.command-new",
	"definitions": {
		"uint": {
			"type": "integer",
			"minimum": 0
		}
	},

	"type": "object",
	"properties": {
		"streams": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"DOC------TODO": "Does this really enforce strings??  Does not seem so in rapid json",
					"broker": "string",
					"topic": "string",

					"source-----DOC": "'source' is an identifier included in each packet which allows to relate to this configuration on topics which are used by multiple sources.  Can be empty, but only for one source on each configured topic.  It is not allowed to have two sources with empty 'source' on the same topic!  In that case, the file writer will only write the messages with the flatbuffer format of the first data message that it encounters and emits a warning.",
					"source": "string",

					"path-----DOC": "object-style path, for example sensor.internal.voltage01, to the property within the message",
					"path": "string",

					"on_path_missing-----DOC": "What if the path does not exist?",
					"on_path_missing": { "type": "string", "enum": ["ignore", "error"]},

					"default_value-----DOC": "A default value, especially useful together with 'on_path_missing'.",
					"default_value": { "type": "integer" }
				},

				"DOC": "additionalProperties accepted by validator, turn on later",
				"additionalProperties": false,

				"required": ["topic"]
			}
		},

		"__note": "can so far not limit the types of the object properties without specifying all property keys",
		"file_attributes": {
			"type": "object"
		}
	},
	"required": ["file_attributes"]
}
