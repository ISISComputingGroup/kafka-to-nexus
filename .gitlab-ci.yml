default:
  tags:
    - docker
  artifacts:
    expire_in: 1 week

stages:
  - check
  - build
  - release

.check:
  stage: check
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-ubuntu2204-build-node:latest

clang-format:
  extends: .check
  script:
    - ci/check-formatting.sh

black:
  extends: .check
  script:
    - python3 -m black --version
    - python3 -m black --check integration-tests

cppcheck:
  extends: .check
  script:
    - cppcheck --version
    - >
      cppcheck \
        --xml \
        --inline-suppr \
        --suppress=unusedFunction \
        --suppress=missingInclude \
        --enable=all \
        --inconclusive \
        src/ 2> cppcheck.xml
  only:
    - merge_requests

.build:
  stage: build
  before_script:
    - mkdir build
    - cd build
    - >
      conan remote add \
        --insert 0 \
        ecdc-conan-virtual \
        $ESS_ARTIFACTORY_ECDC_CONAN_VIRTUAL_REMOTE_URL
    - $SCL conan install --build missing ..
    - $SCL conan info ../conanfile.txt > CONAN_INFO
  after_script:
    - >
      conan remote add \
        ecdc-conan-external \
        $ESS_ARTIFACTORY_ECDC_CONAN_EXTERNAL_REMOTE_URL
    - >
      conan user \
        --password $ESS_ARTIFACTORY_ECDC_CONAN_TOKEN \
        --remote ecdc-conan-external \
        $ESS_ARTIFACTORY_ECDC_CONAN_USER
    # Store built packages to save build time on subsequent builds
    - conan upload '*' --all --confirm --remote ecdc-conan-external

build-debug:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  variables:
    SCL: scl enable devtoolset-11 rh-python38 --
  script:
    - $SCL cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL -DRUN_DOXYGEN=ON -DCOV=ON ..
    - $SCL ninja all UnitTests docs
    - $SCL ninja coverage
    - cat coverage.txt
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    paths:
      - build/coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml

build-release:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  variables:
    SCL: scl enable devtoolset-11 rh-python38 --
  script:
    - $SCL ../ci/configure-release.sh .. .
    - $SCL ninja all UnitTests docs
    - ./bin/UnitTests --gtest_output=xml:test-output.xml
  artifacts:
    paths:
      - build/test-output.xml
      - build/CONAN_INFO
      - build/bin
      - build/lib
      - build/licenses
    reports:
      junit: build/test-output.xml

build-alt-distro:
  extends: .build
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-$DISTRO-build-node:latest
  script:
    - $SCL cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCONAN=MANUAL -DRUN_DOXYGEN=ON ..
    - $SCL ninja all UnitTests docs
    - ./bin/UnitTests
  parallel:
    matrix:
      - DISTRO:
          - debian11
          - ubuntu2204
      - DISTRO: almalinux8
        SCL: scl enable gcc-toolset-12 --

archive:
  stage: release
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  script:
    - cd build
    - mkdir -p archive/kafka-to-nexus/bin
    - cp ./bin/kafka-to-nexus archive/kafka-to-nexus/bin/
    - cp -r ./lib archive/kafka-to-nexus/
    - cp -r ./licenses archive/kafka-to-nexus/
    - cp ./CONAN_INFO archive/kafka-to-nexus/
    - cd archive
    - tar czf kafka-to-nexus.tar.gz kafka-to-nexus
  dependencies:
    - build-release
  artifacts:
    paths:
      - build/archive/kafka-to-nexus.tar.gz

keep-artifacts:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  image: registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:latest
  script:
    - echo "Commit is tagged, keeping artefacts."
  dependencies:
    - archive
  artifacts:
    paths:
      - build/archive/kafka-to-nexus.tar.gz
    expire_in: never
